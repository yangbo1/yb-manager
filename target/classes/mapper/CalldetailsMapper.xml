<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yb.dao.CalldetailsMapper" >
  <resultMap id="BaseResultMap" type="com.yb.pojo.Calldetails" >
    <id column="call_id" property="callId" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="time" property="time" jdbcType="INTEGER" />
    <result column="cost" property="cost" jdbcType="REAL" />
    <result column="cust_id" property="custId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    call_id, createtime, time, cost, cust_id, name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.yb.pojo.CalldetailsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from calldetails
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from calldetails
    where call_id = #{callId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from calldetails
    where call_id = #{callId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yb.pojo.CalldetailsExample" >
    delete from calldetails
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yb.pojo.Calldetails" >
    insert into calldetails (call_id, createtime, time, 
      cost, cust_id, name)
    values (#{callId,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, #{time,jdbcType=INTEGER}, 
      #{cost,jdbcType=REAL}, #{custId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yb.pojo.Calldetails" >
    insert into calldetails
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="callId != null" >
        call_id,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="custId != null" >
        cust_id,
      </if>
      <if test="name != null" >
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="callId != null" >
        #{callId,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        #{time,jdbcType=INTEGER},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=REAL},
      </if>
      <if test="custId != null" >
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yb.pojo.CalldetailsExample" resultType="java.lang.Integer" >
    select count(*) from calldetails
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update calldetails
    <set >
      <if test="record.callId != null" >
        call_id = #{record.callId,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=INTEGER},
      </if>
      <if test="record.cost != null" >
        cost = #{record.cost,jdbcType=REAL},
      </if>
      <if test="record.custId != null" >
        cust_id = #{record.custId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update calldetails
    set call_id = #{record.callId,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      time = #{record.time,jdbcType=INTEGER},
      cost = #{record.cost,jdbcType=REAL},
      cust_id = #{record.custId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yb.pojo.Calldetails" >
    update calldetails
    <set >
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=REAL},
      </if>
      <if test="custId != null" >
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where call_id = #{callId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yb.pojo.Calldetails" >
    update calldetails
    set createtime = #{createtime,jdbcType=TIMESTAMP},
      time = #{time,jdbcType=INTEGER},
      cost = #{cost,jdbcType=REAL},
      cust_id = #{custId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR}
    where call_id = #{callId,jdbcType=INTEGER}
  </update>
</mapper>